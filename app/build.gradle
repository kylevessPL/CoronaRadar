plugins {
    id 'com.android.application'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'com.google.firebase.firebase-perf'
    id 'dagger.hilt.android.plugin'
    id 'de.mannodermaus.android-junit5'
    id 'com.chaquo.python'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}

Properties properties = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
}

android {
    compileSdk 31

    defaultConfig {
        applicationId properties.getProperty('app.id', 'pl.piasta.coronaradar')
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName '1.0'
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArgument "runnerBuilder", "de.mannodermaus.junit5.AndroidJUnit5Builder"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a"
        }

        python {
            pip {
                install 'matplotlib'
                install 'librosa'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'),
                    'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding true
        mlModelBinding true
    }

    aaptOptions {
        noCompress "tflite"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    packagingOptions {
        resources.excludes += 'DebugProbesKt.bin'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    def materialVersion = '1.4.0'
    def firebaseVersion = '28.4.1'
    def mlKitVersion = '16.1.1'
    def gmsAuthVersion = '19.2.0'
    def gmsMlKitVersion = '16.0.0-beta1'
    def appCompatVersion = '1.3.1'
    def coreVersion = '1.6.0'
    def activityVersion = '1.3.1'
    def fragmentVersion = '1.3.6'
    def lifecycleVersion = '2.3.1'
    def navigationVersion = '2.3.5'
    def preferenceVersion = '1.1.1'
    def constraintlayoutVersion = '2.1.1'
    def mockkVersion = '1.12.0'
    def hiltVersion = '2.39.1'
    def coroutinesVersion = '1.5.2'
    def tensorflowVersion = '2.6.0'
    def tensorflowSupportVersion = '0.2.0'
    def tensorflowMetadataVersion = '0.2.1'
    def testVersion = '1.4.0'
    def koTestVersion = '5.0.0.M2'
    def kaspressoVersion = '1.2.1'
    def mannodermausVersion = '1.3.0'
    def jUnitVersion = '5.8.1'

    implementation "com.google.android.material:material:$materialVersion"
    implementation platform("com.google.firebase:firebase-bom:$firebaseVersion")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-crashlytics-ktx"
    implementation "com.google.firebase:firebase-perf-ktx"
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-firestore"
    implementation "com.google.mlkit:linkfirebase:$mlKitVersion"
    implementation "com.google.android.gms:play-services-mlkit-image-labeling-custom:$gmsMlKitVersion"
    implementation "com.google.android.gms:play-services-auth:$gmsAuthVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.activity:activity-ktx:$activityVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "org.tensorflow:tensorflow-lite-gpu:$tensorflowVersion"
    implementation "org.tensorflow:tensorflow-lite-support:$tensorflowSupportVersion"
    implementation "org.tensorflow:tensorflow-lite-metadata:$tensorflowMetadataVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$koTestVersion"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$koTestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    androidTestImplementation "androidx.test:core-ktx:$testVersion"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"
    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:$mannodermausVersion"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:$mannodermausVersion"
    androidTestImplementation "com.kaspersky.android-components:kaspresso:$kaspressoVersion"
}

kapt.correctErrorTypes true

tasks.preBuild.dependsOn(tasks.matching { task -> task.name == 'ktlintFormat' })
