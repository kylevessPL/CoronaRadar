plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'kotlin-noarg'
    id 'kotlinx-serialization'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.firebase-perf'
    id 'dagger.hilt.android.plugin'
    id 'de.mannodermaus.android-junit5'
    id 'com.chaquo.python'
}

Properties properties = new Properties()
if (project.rootProject.file('local.properties').canRead()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

android {
    compileSdk 31

    defaultConfig {
        applicationId 'pl.piasta.coronaradar'
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName '1.0'
        resConfigs('en', 'pl')
        buildConfigField 'String', 'SERVER_DOMAIN', "\"${properties.getProperty('app.server.domain', 'example.com')}\""
        buildConfigField 'String', 'ML_MODEL_NAME', "\"${properties.getProperty('app.ml.model-name', 'model')}\""
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        testInstrumentationRunnerArgument 'runnerBuilder', 'de.mannodermaus.junit5.AndroidJUnit5Builder'

        ndk {
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86', 'x86_64'
        }

        python {
            pip {
                install 'pyparsing==2.0.2'
                install 'matplotlib'
                install 'librosa'
                install 'numpy'
                install 'pillow'
                install 'Keras-Preprocessing'
                install 'tflite_runtime'
            }
        }
        signingConfig signingConfigs.debug
        targetSdkVersion 31
        minSdkVersion 26
    }

    androidResources {
        noCompress 'tflite'
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
    }


    buildFeatures {
        dataBinding true
        mlModelBinding true
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    packagingOptions {
        resources.excludes += 'DebugProbesKt.bin'
    }

    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
    }

    kotlinOptions {
        jvmTarget = '1.8'
        freeCompilerArgs += ['-Xopt-in=splitties.toast.UnreliableToastApi', '-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi', '-Xopt-in=kotlinx.serialization.ExperimentalSerializationApi', '-Xopt-in=kotlin.contracts.ExperimentalContracts']
    }
    compileSdkVersion 31
}

dependencies {
    def materialVersion = '1.4.0'
//    def appCheckVersion = '16.0.0-beta03'
    def firebaseVersion = '28.4.1'
    def facebookSdkVersion = '12.1.0'
    def gmsAuthVersion = '19.2.0'
    def appCompatVersion = '1.4.0'
    def coreVersion = '1.7.0'
    def splashScreenVersion = '1.0.0-alpha02'
    def activityVersion = '1.4.0'
    def fragmentVersion = '1.4.0'
    def lifecycleVersion = '2.4.0'
    def navigationVersion = '2.3.5'
    def preferenceVersion = '1.1.1'
    def pagingVersion = '3.1.0'
    def constraintLayoutVersion = '2.1.2'
    def splittiesVersion = '3.0.0'
    def liveEventVersion = '1.3.0'
    def mockkVersion = '1.12.1'
    def hiltVersion = '2.40.2'
    def glideVersion = '4.12.0'
    def kPermissionsVersion = '3.2.1'
    def waveRecorderVersion = '1.6.0'
    def waveAnimationVersion = '1.0.0'
    def localizationVersion = '1.2.10'
    def loadersPackVersion = '1.2.3'
    def surveyKitVersion = '2.0.0-alpha-4'
    def coroutinesVersion = '1.5.2'
    def serializationPropertiesVersion = '1.3.1'
    def testVersion = '1.4.0'
    def koTestVersion = '5.0.0.RC2'
    def kaspressoVersion = '1.3.0'
    def mannodermausVersion = '1.3.0'
    def jUnitVersion = '5.8.1'

    implementation "com.google.android.material:material:$materialVersion"
    implementation platform("com.google.firebase:firebase-bom:$firebaseVersion")
    implementation "com.google.firebase:firebase-analytics-ktx"
    implementation "com.google.firebase:firebase-perf-ktx"
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-dynamic-links-ktx"
    implementation "com.google.firebase:firebase-firestore-ktx"
    implementation "com.google.firebase:firebase-storage-ktx"
    implementation "com.google.firebase:firebase-ml-modeldownloader-ktx"
//    implementation "com.google.firebase:firebase-appcheck-safetynet:$appCheckVersion"
    implementation "com.facebook.android:facebook-login:$facebookSdkVersion"
    implementation "com.google.android.gms:play-services-auth:$gmsAuthVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.core:core-ktx:$coreVersion"
    implementation "androidx.core:core-splashscreen:$splashScreenVersion"
    implementation "androidx.activity:activity-ktx:$activityVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"
    implementation "androidx.preference:preference-ktx:$preferenceVersion"
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "com.louiscad.splitties:splitties-views-material:$splittiesVersion"
    implementation "com.louiscad.splitties:splitties-activities:$splittiesVersion"
    implementation "com.louiscad.splitties:splitties-resources:$splittiesVersion"
    implementation "com.louiscad.splitties:splitties-toast:$splittiesVersion"
    implementation "com.louiscad.splitties:splitties-alertdialog-material:$splittiesVersion"
    implementation "com.github.hadilq:live-event:$liveEventVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$coroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-properties:$serializationPropertiesVersion"
    implementation "com.google.dagger:hilt-android:$hiltVersion"
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    implementation "com.github.fondesa:kpermissions:$kPermissionsVersion"
    implementation "com.github.squti:Android-Wave-Recorder:$waveRecorderVersion"
    implementation "com.aghajari.waveanimation:AXWaveAnimation:$waveAnimationVersion"
    implementation "com.akexorcist:localization:$localizationVersion"
    implementation "com.agrawalsuneet.androidlibs:loaderspack:$loadersPackVersion"
    implementation "com.quickbirdstudios:surveykit:$surveyKitVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"
    kapt "com.google.dagger:hilt-android-compiler:$hiltVersion"
    testImplementation "io.kotest:kotest-runner-junit5-jvm:$koTestVersion"
    testImplementation "io.kotest:kotest-assertions-core-jvm:$koTestVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"
    androidTestImplementation "androidx.test:core-ktx:$testVersion"
    androidTestImplementation "org.junit.jupiter:junit-jupiter-api:$jUnitVersion"
    androidTestRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jUnitVersion"
    androidTestImplementation "de.mannodermaus.junit5:android-test-core:$mannodermausVersion"
    androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:$mannodermausVersion"
    androidTestImplementation "com.kaspersky.android-components:kaspresso:$kaspressoVersion"
}

noArg {
    annotation("pl.piasta.coronaradar.util.NoArg")
    invokeInitializers = true
}

kapt.correctErrorTypes true

tasks.preBuild.dependsOn(tasks.matching { task -> task.name == 'ktlintFormat' })
